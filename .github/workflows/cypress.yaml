name: Cypress Tests

on:
  pull_request:
    branches:
      - develop
      - staging
  workflow_dispatch:

jobs:
  # Setup job to start the backend
  setup-backend:
    name: Setup Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Backend Branch
        id: backend-branch
        run: |
          if [[ '${{ github.event.pull_request.base.ref }}' == 'staging' ]]; then
            echo "branch=staging" >> $GITHUB_OUTPUT
          else
            echo "branch=develop" >> $GITHUB_OUTPUT
          fi

      - name: Checkout Backend Repository
        uses: actions/checkout@v3
        with:
          repository: ohcnetwork/care
          path: care
          ref: ${{ steps.backend-branch.outputs.branch }}

      - name: Start Backend Docker Containers
        run: |
          cd care
          echo DISABLE_RATELIMIT=True >> docker/.prebuilt.env
          echo "CORS_ALLOWED_ORIGINS=\"[\\\"http://localhost:4000\\\"]\"" >> docker/.prebuilt.env
          echo JWKS_BASE64=\"$(cat ../.github/runner-files/jwks.b64.txt)\" >> docker/.prebuilt.env
          make docker_config_file=docker-compose.pre-built.yaml up 
          make docker_config_file=docker-compose.pre-built.yaml load-dummy-data
          cd ..
        env:
          JWKS_BASE64: ${{ secrets.JWKS_BASE64 }}

      - name: Wait for Backend to be Ready
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 1
          max_attempts: 5
          command: curl -o /dev/null -s -w "%{http_code}\n" http://localhost:9000
          on_retry_command: sleep 5

      - name: Start Frontend Server
        run: npx vite preview --host &

  # Parallel Cypress Test Job Using Reusable Workflow
  cypress-tests:
    name: Cypress Parallel Tests
    needs: setup-backend
    uses: bahmutov/cypress-workflows/.github/workflows/split.yml@v1
    with:
      nE2E: 4  # Number of parallel containers for running E2E specs
      start: "http://localhost:4000"
      config: "cypress/e2e/**/*.cy.ts"
    secrets:
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
    steps:
      - name: Install Cypress and Dependencies
        run: npm ci  # Ensures all dependencies in package-lock.json are installed