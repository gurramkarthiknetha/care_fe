jobs:
  # 1. Setup Job: Backend and Frontend Setup
  setup:
    runs-on: ubuntu-latest
    outputs:
      api_url: http://localhost:9000
    steps:
      - name: Checkout Repository 📥
        uses: actions/checkout@v3

      - name: Set backend branch
        id: backend-branch
        run: |
          if [[ '${{ github.event.pull_request.base.ref }}' == 'staging' ]]; then
            echo "branch=staging" >> $GITHUB_OUTPUT
          else
            echo "branch=develop" >> $GITHUB_OUTPUT
          fi

      - name: Checkout care backend 📥
        uses: actions/checkout@v3
        with:
          repository: ohcnetwork/care
          path: care
          ref: ${{ steps.backend-branch.outputs.branch }}

      - name: Start backend services via Docker 🐳
        run: |
          cd care
          echo DISABLE_RATELIMIT=True >> docker/.prebuilt.env
          make docker_config_file=docker-compose.pre-built.yaml up -d  # Detached mode so it doesn't block
          cd ..

      - name: Wait for backend to be up ♻
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 10
          command: curl -o /dev/null -s -w "%{http_code}\n" http://localhost:9000
          on_retry_command: sleep 5

      - name: Start frontend server
        run: npm run preview -- --host &
        env:
          CARE_API: http://localhost:9000

      - name: Wait for frontend to be up ♻
        run: npx wait-on http://localhost:4000

      # Keep setup running
      - name: Keep services running during tests
        run: sleep 9999999 # Keeps the backend and frontend alive

  # 2. Cypress Tests Job: Parallel Test Execution
  cypress-test:
    needs: setup # Cypress jobs depend on setup job
    runs-on: ubuntu-latest
    strategy:
      matrix:
        parallel_processes: [1, 2, 3, 4, 5, 6] # Define the number of independent processes
    steps:
      - name: Checkout Repository 📥
        uses: actions/checkout@v3

      # Wait for frontend and backend to be up
      - name: Wait for frontend and backend to be up
        run: |
          npx wait-on http://localhost:4000 && npx wait-on http://localhost:9000

      - name: Cypress Tests with Parallel Execution 🥬
        run: |
          CYPRESS_SPLIT_INDEX=${{ matrix.parallel_processes }} \
          CYPRESS_SPLIT_TOTAL=6 \
          CYPRESS_SPLIT_TESTS=true \
          npx cypress run --browser chrome --record \
          --ci-build-id ${{ github.sha }}-${{ github.run_id }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          NODE_OPTIONS: --max_old_space_size=4096
          CARE_API: ${{ needs.setup.outputs.api_url }}

      - name: Upload Cypress screenshots on failure 📸
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload Cypress videos 📹
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
