name: Cypress Tests

on:
  pull_request:
    branches:
      - develop
      - staging
  workflow_dispatch:

jobs:
  cypress-run:
    runs-on: ubuntu-latest # Use GitHub-hosted runner, or self-hosted for more power if needed
    strategy:
      matrix:
        parallel_processes: [1, 2, 3, 4, 5, 6] # Define the number of independent processes (parallel workers)
    env:
      REACT_CARE_API_URL: http://localhost:9000 # Set environment variables as needed
    steps:
      - name: Checkout Repository üì•
        uses: actions/checkout@v3

      - name: Set backend branch
        id: backend-branch
        run: |
          if [[ '${{ github.event.pull_request.base.ref }}' == 'staging' ]]; then
            echo "branch=staging" >> $GITHUB_OUTPUT
          else
            echo "branch=develop" >> $GITHUB_OUTPUT
          fi

      - name: Checkout care backend üì•
        uses: actions/checkout@v3
        with:
          repository: ohcnetwork/care
          path: care
          ref: ${{ steps.backend-branch.outputs.branch }}

      - name: Start care docker containers üê≥
        run: |
          cd care
          echo DISABLE_RATELIMIT=True >> docker/.prebuilt.env
          echo "CORS_ALLOWED_ORIGINS=\"[\\\"http://localhost:4000\\\"]\"" >> docker/.prebuilt.env
          echo JWKS_BASE64=\"$(cat ../.github/runner-files/jwks.b64.txt)\" >> docker/.prebuilt.env
          make docker_config_file=docker-compose.pre-built.yaml up 
          make docker_config_file=docker-compose.pre-built.yaml load-dummy-data
          cd ..
        env:
          JWKS_BASE64: ${{ secrets.JWKS_BASE64 }}

      - name: Wait for backend to be up ‚ôª
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 1
          max_attempts: 5
          command: curl -o /dev/null -s -w "%{http_code}\n" http://localhost:9000
          on_retry_command: sleep 5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies üì¶
        run: npm ci # Use npm ci for faster and cleaner installations

      - name: Build frontend ‚öôÔ∏è
        run: npm run build

      - name: Start frontend server
        run: npm run preview -- --host &
        env:
          CARE_API: http://localhost:9000

      - name: Wait for frontend to be up ‚ôª
        run: npx wait-on http://localhost:4000

      - name: Cypress Tests with Parallel Execution ü•¨
        run: |
          CYPRESS_SPLIT_INDEX=${{ matrix.parallel_processes }} \
          CYPRESS_SPLIT_TOTAL=6 \
          CYPRESS_SPLIT_TESTS=true \
          npx cypress run --browser chrome --record --parallel=false \
          --ci-build-id ${{ github.sha }}-${{ github.run_id }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          NODE_OPTIONS: --max_old_space_size=4096
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
          COMMIT_INFO_SHA: ${{ github.event.pull_request.head.sha }}

      - name: Upload Cypress screenshots on failure üì∏
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload Cypress videos üìπ
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
